services:
#  etcd:
#    image: gcr.io/etcd-development/etcd:v3.5.13
#    ports:
#      - "2378:2379"
#      - "2381:2380"
#    environment:
#      - DATA_DIR=/etcd-data
#    volumes:
#      - .local/etcd:/etcd-data
#    command:
#      - etcd
#      - "-listen-client-urls"
#      - "http://0.0.0.0:2379"
#      - "-advertise-client-urls"
#      - "http://etcd-srv:2379"
#    networks:
#      - backend

  zookeeper:
    image: wurstmeister/zookeeper
    environment:
      ZOO_MY_ID: 1
    ports:
      - "2181:2181"
    networks:
      - backend

  kafka:
    image: wurstmeister/kafka
    environment:
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9092,OUTSIDE://localhost:9093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_LISTENERS: INSIDE://0.0.0.0:9092,OUTSIDE://0.0.0.0:9093
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_CREATE_TOPICS: "${KAFKA_TOPIC}:1:1"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    ports:
      - "9092:9092"
      - "9093:9093"
    depends_on:
      - zookeeper
    volumes:
      - //var/run/docker.sock:/var/run/docker.sock
    networks:
      - backend

  mysql:
    image: mysql:8.0
    restart: always
    environment:
      - MYSQL_ROOT_PASSWORD=admin
      - MYSQL_DATABASE=${MYSQL_DB_NAME}
    volumes:
      - .local/mysql:/var/lib/mysql
    networks:
      - backend

  server:
    build:
      context: .
      target: server
    restart: always
    environment:
      - TZ=Asia/Shanghai
    ports:
      - "${SERVER_PORT}:8000"
    depends_on:
      - kafka
      - mysql
    command:
      - "./hello-server"
      - "--addr"
      - ":${SERVER_PORT}"
      - "--mysql"
      - "root:admin@tcp(mysql)/${MYSQL_DB_NAME}?parseTime=true"
      - "--kafka-addr"
      - "kafka"
      - "--kafka-topic"
      - ${KAFKA_TOPIC}
    networks:
      - backend

  client:
    build:
      context: .
      target: client
    restart: always
    environment:
      - TZ=Asia/Shanghai
    ports:
      - "${CLIENT_PORT}:8080"
    depends_on:
      - kafka
      - mysql
    command:
      - "./hello-client"
      - "--server-domain"
      - "server:${SERVER_PORT}"
      - "--addr"
      - ":${CLIENT_PORT}"
      - "--mysql"
      - "root:admin@tcp(mysql)/${MYSQL_DB_NAME}?parseTime=true"
      - "--kafka-addr"
      - "kafka"
      - "--kafka-topic"
      - ${KAFKA_TOPIC}
      - "--clickhouse-host"
      - "clickhouse:9000"
      - "--clickhouse-db"
      - ${CLICKHOUSE_DB_NAME}
    networks:
      - backend
      - logs_logs

networks:
  backend:
    driver: bridge
  logs_logs:
    external:
      name: logs_logs